
require 'bundler/gem_tasks'
begin
  Bundler.setup
rescue Bundler::BundlerError => e
  $stderr.puts e.message
  $stderr.puts 'Run `bundle install` to install missing gems'
  exit e.status_code
end

require 'rake/testtask'
desc 'Run the weather file tests'
Rake::TestTask.new('test:weather') do |task|
  task.libs << 'test'
  task.test_files = FileList['openstudio-standards/test/necb/test_weather.rb']
end

desc 'Run the compliance file tests'
Rake::TestTask.new('test:compliance') do |task|
  task.libs << 'test'
  task.test_files = FileList['openstudio-standards/test/necb/test_compliance.rb']
end

desc 'Run CircleCI tests in parallel'
Rake::TestTask.new('test:circleci') do |task|
  case ENV['CIRCLE_NODE_INDEX']
  when '0'
    task.test_files = FileList[
    'openstudio-standards/test/90_1_general/test_find_ashrae_hot_water_demand.rb'
    # 'openstudio-standards/test/90_1_general/test_find_construction_properties_data.rb',
    # 'openstudio-standards/test/90_1_general/test_find_space_type_standards_data.rb', # 0 min
    # 'openstudio-standards/test/90_1_general/test_find_target_eui.rb', # 0 min
    # 'openstudio-standards/test/90_1_general/test_find_target_eui_by_end_use.rb', # 0 min
    # 'openstudio-standards/test/doe_prototype/test_primary_school.rb', # 4 min
    # 'openstudio-standards/test/doe_prototype/test_warehouse.rb', # 1 min
    # 'openstudio-standards/test/90_1_prm/test_create_performance_rating_method_baseline_building.rb', # 33 min
    ]
  when '1'
    task.test_files = FileList[
    # 'openstudio-standards/test/doe_prototype/test_secondary_school.rb', # 6 min
    # 'openstudio-standards/test/doe_prototype/test_medium_office.rb', # 2 min
    # 'openstudio-standards/test/doe_prototype/test_mid_rise_apartment.rb' # 7 min
    # 'openstudio-standards/test/90_1_prm/test_create_performance_rating_method_baseline_bldg_2.rb' # 32 min
    ]
  when '2'
    task.test_files = FileList[
    # 'openstudio-standards/test/doe_prototype/test_large_hotel.rb', # 3 min
    # 'openstudio-standards/test/doe_prototype/test_large_office.rb', # 2 min
    # 'openstudio-standards/test/doe_prototype/test_quick_service_restaurant.rb', # 1 min
    # 'openstudio-standards/test/doe_prototype/test_strip_mall.rb', # 2 min
    # 'openstudio-standards/test/doe_prototype/test_outpatient.rb', # 10 min 
    # 'openstudio-standards/test/90_1_prm/test_create_performance_rating_method_baseline_bldg_3.rb' # 65 min
    ]
  when '3'
    task.test_files = FileList[
    # 'openstudio-standards/test/doe_prototype/test_full_service_restaurant.rb', # 1 min
    # 'openstudio-standards/test/doe_prototype/test_retail_standalone.rb', # 6 min
    # 'openstudio-standards/test/doe_prototype/test_small_hotel.rb', # 80 min
    # 'openstudio-standards/test/doe_prototype/test_small_office.rb', # 7 min
    # NECB Buildings
    # 'openstudio-standards/test/necb/test_necb_airloop_sizing_parameters.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_full_service_restaurant.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_high_rise_apartment.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_large_hotel.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_large_office.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_medium_office.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_midrise_apartment_office.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_outpatient.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_primary_school.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_quick_service_restaurant.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_retail_standalone.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_retail_stripmall.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_secondary_school.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_small_hotel.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_small_office.rb',
    # 'openstudio-standards/test/necb/test_necb_bldg_warehouse.rb',
    # 'openstudio-standards/test/necb/test_necb_boiler_rules.rb',
    # 'openstudio-standards/test/necb/test_necb_chiller_rules.rb', #42s
    # 'openstudio-standards/test/necb/test_necb_constructions_fdwr.rb', #19s
    # 'openstudio-standards/test/necb/test_necb_coolingtower_rules.rb',
    # 'openstudio-standards/test/necb/test_necb_default_spacetypes.rb', #30s
    # 'openstudio-standards/test/necb/test_necb_default_system_selection.rb',
    # 'openstudio-standards/test/necb/test_necb_fan_rules.rb',
    # 'openstudio-standards/test/necb/test_necb_heatpump_rules.rb',
    # 'openstudio-standards/test/necb/test_necb_hrv_rules.rb',
    # 'openstudio-standards/test/necb/test_necb_loop_rules.rb',
    # 'openstudio-standards/test/necb/test_necb_unitary_rules.rb',
    # 'openstudio-standards/test/necb/test_necb_waterheater_rules.rb',
    # 'openstudio-standards/test/necb/test_necb_weather.rb',
    'openstudio-standards/test/90_1_general/test_boiler_hot_water.rb'
    # 'openstudio-standards/test/90_1_general/test_chiller_electric_eir.rb',
    # 'openstudio-standards/test/90_1_general/test_coil_dx.rb',
    # 'openstudio-standards/test/90_1_general/test_get_building_climate_zone_and_building_type.rb',
    # 'openstudio-standards/test/doe_prototype/test_high_rise_apartment.rb', # 54 min
    # 'openstudio-standards/test/doe_prototype/test_add_elevators.rb',
    # 'openstudio-standards/test/doe_prototype/test_add_exhaust.rb',
    # 'openstudio-standards/test/doe_prototype/test_add_exterior_lights.rb',
    # 'openstudio-standards/test/doe_prototype/test_add_swh.rb',
    # 'openstudio-standards/test/doe_prototype/test_effective_num_stories.rb',
    # 'openstudio-standards/test/doe_prototype/test_space_type_hash.rb'
    ]
  else
    puts 'No tests have been assigned to this node.  Check the test:circleci task in the Rakefile.'
  end

end

desc 'Run test'
Rake::TestTask.new('test:necb-buildings') do |task|
  task.libs << 'test'
  task.test_files = FileList[
  'openstudio-standards/test/necb/test_necb_airloop_sizing_parameters.rb',
  'openstudio-standards/test/necb/test_necb_bldg_full_service_restaurant.rb',
  'openstudio-standards/test/necb/test_necb_bldg_high_rise_apartment.rb',
  'openstudio-standards/test/necb/test_necb_bldg_large_hotel.rb',
  'openstudio-standards/test/necb/test_necb_bldg_large_office.rb',
  'openstudio-standards/test/necb/test_necb_bldg_medium_office.rb',
  'openstudio-standards/test/necb/test_necb_bldg_midrise_apartment_office.rb',
  'openstudio-standards/test/necb/test_necb_bldg_outpatient.rb',
  'openstudio-standards/test/necb/test_necb_bldg_primary_school.rb',
  'openstudio-standards/test/necb/test_necb_bldg_quick_service_restaurant.rb',
  'openstudio-standards/test/necb/test_necb_bldg_retail_standalone.rb',
  'openstudio-standards/test/necb/test_necb_bldg_retail_stripmall.rb',
  'openstudio-standards/test/necb/test_necb_bldg_secondary_school.rb',
  'openstudio-standards/test/necb/test_necb_bldg_small_hotel.rb',
  'openstudio-standards/test/necb/test_necb_bldg_small_office.rb',
  'openstudio-standards/test/necb/test_necb_bldg_warehouse.rb',
  'openstudio-standards/test/necb/test_necb_boiler_rules.rb',
  'openstudio-standards/test/necb/test_necb_chiller_rules.rb', #42s
  'openstudio-standards/test/necb/test_necb_constructions_fdwr.rb', #19s
  'openstudio-standards/test/necb/test_necb_coolingtower_rules.rb',
  'openstudio-standards/test/necb/test_necb_default_spacetypes.rb', #30s
  'openstudio-standards/test/necb/test_necb_default_system_selection.rb',
  'openstudio-standards/test/necb/test_necb_fan_rules.rb',
  'openstudio-standards/test/necb/test_necb_heatpump_rules.rb',
  'openstudio-standards/test/necb/test_necb_hrv_rules.rb',
  'openstudio-standards/test/necb/test_necb_loop_rules.rb',
  'openstudio-standards/test/necb/test_necb_unitary_rules.rb',
  'openstudio-standards/test/necb/test_necb_waterheater_rules.rb',
  'openstudio-standards/test/necb/test_necb_weather.rb'
  ]
end

desc 'Run the NECB 2011 HVAC Tests'
Rake::TestTask.new('test:necb-hvac') do |task|
  task.libs << 'test'
  task.test_files = FileList['openstudio-standards/test/necb/test_create_necb_hvac.rb']
end

desc 'Run the gem tests'
Rake::TestTask.new('test:gem') do |task|
  task.libs << 'test'
  task.test_files = FileList['openstudio-standards/test/test_*.rb']
end

desc 'Run all tests'
task 'test:all' => ['test:prm', 'test:gem']





require "#{File.dirname(__FILE__)}/data/standards/manage_OpenStudio_Standards.rb"
desc 'Download OpenStudio_Standards from Google & export JSONs'
task 'data:update' do
  download_google_spreadsheet
  export_spreadsheet_to_json
end

task 'data:update:manual' do
  export_spreadsheet_to_json
end

require 'yard'
desc 'Generate the documentation'
YARD::Rake::YardocTask.new(:doc) do |task|
  Dir.chdir('../')
  task.stats_options = ['--list-undoc']
end

desc 'Show the documentation in a web browser'
task 'doc:show' => [:doc] do
  link = "#{Dir.pwd}/openstudio-standards/doc/index.html"
  if RbConfig::CONFIG['host_os'] =~ /mswin|mingw|cygwin/
    system "start #{link}"
  elsif RbConfig::CONFIG['host_os'] =~ /darwin/
    system "open #{link}"
  elsif RbConfig::CONFIG['host_os'] =~ /linux|bsd/
    system "xdg-open #{link}"
  end
end

require 'rubocop/rake_task'
desc 'Check the code for style consistency'
RuboCop::RakeTask.new(:rubocop) do |task|
  # Make a folder for the output
  out_dir = 'openstudio-standards/.rubocop'
  Dir.mkdir(out_dir) unless File.exist?(out_dir)
  # Output both XML (CheckStyle format) and HTML
  task.options = ["--out=#{out_dir}/rubocop-results.xml", '--format=h', "--out=#{out_dir}/rubocop-results.html", '--format=offenses', "--out=#{out_dir}/rubocop-summary.txt"]
  task.requires = ['rubocop/formatter/checkstyle_formatter']
  task.formatters = ['RuboCop::Formatter::CheckstyleFormatter']
  # don't abort rake on failure
  task.fail_on_error = false
end

desc 'Build, install, test gem'
task btest: [:install, 'test:all']

task default: :btest